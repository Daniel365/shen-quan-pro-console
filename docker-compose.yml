version: '3.8'

services:
  frontend:
    image: ${FRONTEND_IMAGE}
    container_name: ${PROJECT_NAME}_frontend_1
    restart: unless-stopped
    ports:
      - "80:80"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    image: ${BACKEND_IMAGE}
    container_name: ${PROJECT_NAME}_backend_1
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      # 后端所需的其他环境变量（根据实际需求添加）
      # - DB_HOST=database
      # - DB_USER=root
      # - DB_PASS=password
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    # 若后端依赖数据库等服务，可添加depends_on
    # depends_on:
    #   - database

# 自定义网络
networks:
  app-network:
    driver: bridge

# 若需要数据库，可添加以下配置（以MySQL为例）
# services:
#   database:
#     image: mysql:8.0
#     container_name: ${PROJECT_NAME}_db_1
#     restart: unless-stopped
#     ports:
#       - "3306:3306"
#     environment:
#       - MYSQL_ROOT_PASSWORD=password
#       - MYSQL_DATABASE=app_db
#     volumes:
#       - db-data:/var/lib/mysql
#     networks:
#       - app-network
# volumes:
#   db-data:
